openapi: 3.0.0
info:
  title: Football Competition Management API
  description: API to manage football competitions, teams, and players.
  version: 1.0.0

paths:
  /competitions:
    get:
      summary: Get list of all competitions
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
          description: The page number on pagination.
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
          description: The number of items in page.
      responses:
        '200':
          description: List of all competitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionList'
     post:
      summary: Create new competition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competition'
      responses:
        '201':
          description: Competition created successfully

  /teams:
    get:
      summary: Get list of teams
      parameters:
        - in: query
          name: teamName
          schema:
            type: string
          description: Filter the list of teams by name.
        - in: query
          name: page
          required: true
          schema:
            type: integer
          description: The page number for pagination.
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
          description: The number of items per page.
      responses:
        '200':
          description: A list of teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamList'
    post:
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: The team was successfully created

  /teams/{teamId}/players:
    get:
      summary: Get a list of players for a specific team
      parameters:
        - in: path
          name: teamId
          required: true
          schema:
            type: string
          description: The ID of the team
        - in: query
          name: playerName
          schema:
            type: string
          description: Filter the list of players by name.
        - in: query
          name: page
          required: true
          schema:
            type: integer
          description: The page number for pagination.
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
          description: The number of items per page.
      responses:
        '200':
          description: A list of players
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerList'
    post:
      summary: Add a new player to a team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          description: The player was successfully added to the team

components:
  schemas:
    Competition:
      type: object
      properties:
        name:
          type: string
          example: LIGA
        location:
          type: string
          example: EUROPE

    CompetitionList:
      type: object
      properties:
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        total:
          type: integer
        page:
          type: integer
        pageSize:
          type: integer

    Team:
      type: object
      properties:
        name:
          type: string
          example: Real Madrid
        slogan:
          type: string
          example: "Hala Madrid"

    TeamList:
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Team'
        total:
          type: integer
        page:
          type: integer
        pageSize:
          type: integer

    Player:
      type: object
      properties:
        name:
          type: string
          example: Lionel Messi
        number:
          type: integer
          example: 10
        strongFoot:
          type: string
          enum:
            - Left
            - Right
          example: Left

    PlayerList:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        total:
          type: integer
        page:
          type: integer
        pageSize:
          type: integer

